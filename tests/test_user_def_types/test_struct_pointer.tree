translation_unit[5->360]
  external_decl[5->360]
    function_definition[5->360]
      decl_specs[5->70]
        type_spec[5->57]
          struct_or_union_spec[5->57]
            struct_or_union[5->11]
              struct[5->11, "struct"]
            id[12->19, "Complex"]
            {[20->21, "{"]
            struct_decl_list[30->51]
              struct_decl_list[30->36]
                struct_decl[30->36]
                  spec_qualifier_list[30->33]
                    type_spec[30->33]
                      int[30->33, "int"]
                  struct_declarator_list[34->35]
                    struct_declarator[34->35]
                      declarator[34->35]
                        direct_declarator[34->35]
                          id[34->35, "x"]
                  ;[35->36, ";"]
              struct_decl[45->51]
                spec_qualifier_list[45->48]
                  type_spec[45->48]
                    int[45->48, "int"]
                struct_declarator_list[49->50]
                  struct_declarator[49->50]
                    declarator[49->50]
                      direct_declarator[49->50]
                        id[49->50, "y"]
                ;[50->51, ";"]
            }[56->57, "}"]
        decl_specs[67->70]
          type_spec[67->70]
            int[67->70, "int"]
      declarator[71->77]
        direct_declarator[71->77]
          direct_declarator[71->75]
            id[71->75, "main"]
          ([75->76, "("]
          )[76->77, ")"]
      compound_stat[78->360]
        {[78->79, "{"]
        block_item_list_opt[88->354]
          block_item_list[88->354]
            block_item_1[88->354]
              block_item_1[88->327]
                block_item_1[88->277]
                  block_item_1[88->240]
                    block_item_1[88->208]
                      block_item_1[88->178]
                        block_item_1[88->146]
                          block_item_1[88->108]
                            block_item[88->108]
                              decl[88->108]
                                decl_body[88->107]
                                  decl_specs[88->102]
                                    type_spec[88->102]
                                      struct_or_union_spec[88->102]
                                        struct_or_union[88->94]
                                          struct[88->94, "struct"]
                                        id[95->102, "Complex"]
                                  init_declarator_list_opt[103->107]
                                    init_declarator_list[103->107]
                                      init_declarator_1_comma[103->107]
                                        init_declarator[103->107]
                                          declarator[103->107]
                                            pointer[103->104]
                                              *[103->104, "*"]
                                            direct_declarator[104->107]
                                              id[104->107, "ptr"]
                                ;[107->108, ";"]
                          block_item[126->146]
                            stat[126->146]
                              exp_stat[126->146]
                                exp_opt[126->145]
                                  exp[126->145]
                                    assignment_exp[126->145]
                                      conditional_exp[126->145]
                                        logical_or_exp[126->145]
                                          logical_and_exp[126->145]
                                            inclusive_or_exp[126->145]
                                              exclusive_or_exp[126->145]
                                                and_exp[126->145]
                                                  equality_exp[126->145]
                                                    relational_exp[126->145]
                                                      shift_expression[126->145]
                                                        additive_exp[126->145]
                                                          mult_exp[126->145]
                                                            cast_exp[126->145]
                                                              unary_exp[126->145]
                                                                postfix_exp[126->145]
                                                                  postfix_exp[126->132]
                                                                    primary_exp[126->132]
                                                                      id[126->132, "printf"]
                                                                  ([132->133, "("]
                                                                  argument_exp_list[133->144]
                                                                    assignment_exp[133->144]
                                                                      conditional_exp[133->144]
                                                                        logical_or_exp[133->144]
                                                                          logical_and_exp[133->144]
                                                                            inclusive_or_exp[133->144]
                                                                              exclusive_or_exp[133->144]
                                                                                and_exp[133->144]
                                                                                  equality_exp[133->144]
                                                                                    relational_exp[133->144]
                                                                                      shift_expression[133->144]
                                                                                        additive_exp[133->144]
                                                                                          mult_exp[133->144]
                                                                                            cast_exp[133->144]
                                                                                              unary_exp[133->144]
                                                                                                postfix_exp[133->144]
                                                                                                  primary_exp[133->144]
                                                                                                    adj_strings[133->144]
                                                                                                      string_1[133->144]
                                                                                                        string[133->144, ""Enter X: ""]
                                                                  )[144->145, ")"]
                                ;[145->146, ";"]
                        block_item[155->178]
                          stat[155->178]
                            exp_stat[155->178]
                              exp_opt[155->177]
                                exp[155->177]
                                  assignment_exp[155->177]
                                    conditional_exp[155->177]
                                      logical_or_exp[155->177]
                                        logical_and_exp[155->177]
                                          inclusive_or_exp[155->177]
                                            exclusive_or_exp[155->177]
                                              and_exp[155->177]
                                                equality_exp[155->177]
                                                  relational_exp[155->177]
                                                    shift_expression[155->177]
                                                      additive_exp[155->177]
                                                        mult_exp[155->177]
                                                          cast_exp[155->177]
                                                            unary_exp[155->177]
                                                              postfix_exp[155->177]
                                                                postfix_exp[155->160]
                                                                  primary_exp[155->160]
                                                                    id[155->160, "scanf"]
                                                                ([160->161, "("]
                                                                argument_exp_list[161->176]
                                                                  argument_exp_list[161->165]
                                                                    assignment_exp[161->165]
                                                                      conditional_exp[161->165]
                                                                        logical_or_exp[161->165]
                                                                          logical_and_exp[161->165]
                                                                            inclusive_or_exp[161->165]
                                                                              exclusive_or_exp[161->165]
                                                                                and_exp[161->165]
                                                                                  equality_exp[161->165]
                                                                                    relational_exp[161->165]
                                                                                      shift_expression[161->165]
                                                                                        additive_exp[161->165]
                                                                                          mult_exp[161->165]
                                                                                            cast_exp[161->165]
                                                                                              unary_exp[161->165]
                                                                                                postfix_exp[161->165]
                                                                                                  primary_exp[161->165]
                                                                                                    adj_strings[161->165]
                                                                                                      string_1[161->165]
                                                                                                        string[161->165, ""%d""]
                                                                  comma[165->166, ","]
                                                                  assignment_exp[167->176]
                                                                    conditional_exp[167->176]
                                                                      logical_or_exp[167->176]
                                                                        logical_and_exp[167->176]
                                                                          inclusive_or_exp[167->176]
                                                                            exclusive_or_exp[167->176]
                                                                              and_exp[167->176]
                                                                                equality_exp[167->176]
                                                                                  relational_exp[167->176]
                                                                                    shift_expression[167->176]
                                                                                      additive_exp[167->176]
                                                                                        mult_exp[167->176]
                                                                                          cast_exp[167->176]
                                                                                            unary_exp[167->176]
                                                                                              unary_operator[167->168]
                                                                                                &[167->168, "&"]
                                                                                              cast_exp[168->176]
                                                                                                unary_exp[168->176]
                                                                                                  postfix_exp[168->176]
                                                                                                    postfix_exp[168->174]
                                                                                                      primary_exp[168->174]
                                                                                                        ([168->169, "("]
                                                                                                        exp[169->173]
                                                                                                          assignment_exp[169->173]
                                                                                                            conditional_exp[169->173]
                                                                                                              logical_or_exp[169->173]
                                                                                                                logical_and_exp[169->173]
                                                                                                                  inclusive_or_exp[169->173]
                                                                                                                    exclusive_or_exp[169->173]
                                                                                                                      and_exp[169->173]
                                                                                                                        equality_exp[169->173]
                                                                                                                          relational_exp[169->173]
                                                                                                                            shift_expression[169->173]
                                                                                                                              additive_exp[169->173]
                                                                                                                                mult_exp[169->173]
                                                                                                                                  cast_exp[169->173]
                                                                                                                                    unary_exp[169->173]
                                                                                                                                      unary_operator[169->170]
                                                                                                                                        *[169->170, "*"]
                                                                                                                                      cast_exp[170->173]
                                                                                                                                        unary_exp[170->173]
                                                                                                                                          postfix_exp[170->173]
                                                                                                                                            primary_exp[170->173]
                                                                                                                                              id[170->173, "ptr"]
                                                                                                        )[173->174, ")"]
                                                                                                    dot[174->175, "."]
                                                                                                    id[175->176, "x"]
                                                                )[176->177, ")"]
                              ;[177->178, ";"]
                      block_item[188->208]
                        stat[188->208]
                          exp_stat[188->208]
                            exp_opt[188->207]
                              exp[188->207]
                                assignment_exp[188->207]
                                  conditional_exp[188->207]
                                    logical_or_exp[188->207]
                                      logical_and_exp[188->207]
                                        inclusive_or_exp[188->207]
                                          exclusive_or_exp[188->207]
                                            and_exp[188->207]
                                              equality_exp[188->207]
                                                relational_exp[188->207]
                                                  shift_expression[188->207]
                                                    additive_exp[188->207]
                                                      mult_exp[188->207]
                                                        cast_exp[188->207]
                                                          unary_exp[188->207]
                                                            postfix_exp[188->207]
                                                              postfix_exp[188->194]
                                                                primary_exp[188->194]
                                                                  id[188->194, "printf"]
                                                              ([194->195, "("]
                                                              argument_exp_list[195->206]
                                                                assignment_exp[195->206]
                                                                  conditional_exp[195->206]
                                                                    logical_or_exp[195->206]
                                                                      logical_and_exp[195->206]
                                                                        inclusive_or_exp[195->206]
                                                                          exclusive_or_exp[195->206]
                                                                            and_exp[195->206]
                                                                              equality_exp[195->206]
                                                                                relational_exp[195->206]
                                                                                  shift_expression[195->206]
                                                                                    additive_exp[195->206]
                                                                                      mult_exp[195->206]
                                                                                        cast_exp[195->206]
                                                                                          unary_exp[195->206]
                                                                                            postfix_exp[195->206]
                                                                                              primary_exp[195->206]
                                                                                                adj_strings[195->206]
                                                                                                  string_1[195->206]
                                                                                                    string[195->206, ""Enter Y: ""]
                                                              )[206->207, ")"]
                            ;[207->208, ";"]
                    block_item[217->240]
                      stat[217->240]
                        exp_stat[217->240]
                          exp_opt[217->239]
                            exp[217->239]
                              assignment_exp[217->239]
                                conditional_exp[217->239]
                                  logical_or_exp[217->239]
                                    logical_and_exp[217->239]
                                      inclusive_or_exp[217->239]
                                        exclusive_or_exp[217->239]
                                          and_exp[217->239]
                                            equality_exp[217->239]
                                              relational_exp[217->239]
                                                shift_expression[217->239]
                                                  additive_exp[217->239]
                                                    mult_exp[217->239]
                                                      cast_exp[217->239]
                                                        unary_exp[217->239]
                                                          postfix_exp[217->239]
                                                            postfix_exp[217->222]
                                                              primary_exp[217->222]
                                                                id[217->222, "scanf"]
                                                            ([222->223, "("]
                                                            argument_exp_list[223->238]
                                                              argument_exp_list[223->227]
                                                                assignment_exp[223->227]
                                                                  conditional_exp[223->227]
                                                                    logical_or_exp[223->227]
                                                                      logical_and_exp[223->227]
                                                                        inclusive_or_exp[223->227]
                                                                          exclusive_or_exp[223->227]
                                                                            and_exp[223->227]
                                                                              equality_exp[223->227]
                                                                                relational_exp[223->227]
                                                                                  shift_expression[223->227]
                                                                                    additive_exp[223->227]
                                                                                      mult_exp[223->227]
                                                                                        cast_exp[223->227]
                                                                                          unary_exp[223->227]
                                                                                            postfix_exp[223->227]
                                                                                              primary_exp[223->227]
                                                                                                adj_strings[223->227]
                                                                                                  string_1[223->227]
                                                                                                    string[223->227, ""%d""]
                                                              comma[227->228, ","]
                                                              assignment_exp[229->238]
                                                                conditional_exp[229->238]
                                                                  logical_or_exp[229->238]
                                                                    logical_and_exp[229->238]
                                                                      inclusive_or_exp[229->238]
                                                                        exclusive_or_exp[229->238]
                                                                          and_exp[229->238]
                                                                            equality_exp[229->238]
                                                                              relational_exp[229->238]
                                                                                shift_expression[229->238]
                                                                                  additive_exp[229->238]
                                                                                    mult_exp[229->238]
                                                                                      cast_exp[229->238]
                                                                                        unary_exp[229->238]
                                                                                          unary_operator[229->230]
                                                                                            &[229->230, "&"]
                                                                                          cast_exp[230->238]
                                                                                            unary_exp[230->238]
                                                                                              postfix_exp[230->238]
                                                                                                postfix_exp[230->236]
                                                                                                  primary_exp[230->236]
                                                                                                    ([230->231, "("]
                                                                                                    exp[231->235]
                                                                                                      assignment_exp[231->235]
                                                                                                        conditional_exp[231->235]
                                                                                                          logical_or_exp[231->235]
                                                                                                            logical_and_exp[231->235]
                                                                                                              inclusive_or_exp[231->235]
                                                                                                                exclusive_or_exp[231->235]
                                                                                                                  and_exp[231->235]
                                                                                                                    equality_exp[231->235]
                                                                                                                      relational_exp[231->235]
                                                                                                                        shift_expression[231->235]
                                                                                                                          additive_exp[231->235]
                                                                                                                            mult_exp[231->235]
                                                                                                                              cast_exp[231->235]
                                                                                                                                unary_exp[231->235]
                                                                                                                                  unary_operator[231->232]
                                                                                                                                    *[231->232, "*"]
                                                                                                                                  cast_exp[232->235]
                                                                                                                                    unary_exp[232->235]
                                                                                                                                      postfix_exp[232->235]
                                                                                                                                        primary_exp[232->235]
                                                                                                                                          id[232->235, "ptr"]
                                                                                                    )[235->236, ")"]
                                                                                                dot[236->237, "."]
                                                                                                id[237->238, "y"]
                                                            )[238->239, ")"]
                          ;[239->240, ";"]
                  block_item[254->277]
                    stat[254->277]
                      exp_stat[254->277]
                        exp_opt[254->276]
                          exp[254->276]
                            assignment_exp[254->276]
                              conditional_exp[254->276]
                                logical_or_exp[254->276]
                                  logical_and_exp[254->276]
                                    inclusive_or_exp[254->276]
                                      exclusive_or_exp[254->276]
                                        and_exp[254->276]
                                          equality_exp[254->276]
                                            relational_exp[254->276]
                                              shift_expression[254->276]
                                                additive_exp[254->276]
                                                  mult_exp[254->276]
                                                    cast_exp[254->276]
                                                      unary_exp[254->276]
                                                        postfix_exp[254->276]
                                                          postfix_exp[254->260]
                                                            primary_exp[254->260]
                                                              id[254->260, "printf"]
                                                          ([260->261, "("]
                                                          argument_exp_list[261->275]
                                                            assignment_exp[261->275]
                                                              conditional_exp[261->275]
                                                                logical_or_exp[261->275]
                                                                  logical_and_exp[261->275]
                                                                    inclusive_or_exp[261->275]
                                                                      exclusive_or_exp[261->275]
                                                                        and_exp[261->275]
                                                                          equality_exp[261->275]
                                                                            relational_exp[261->275]
                                                                              shift_expression[261->275]
                                                                                additive_exp[261->275]
                                                                                  mult_exp[261->275]
                                                                                    cast_exp[261->275]
                                                                                      unary_exp[261->275]
                                                                                        postfix_exp[261->275]
                                                                                          primary_exp[261->275]
                                                                                            adj_strings[261->275]
                                                                                              string_1[261->275]
                                                                                                string[261->275, ""Displaying: ""]
                                                          )[275->276, ")"]
                        ;[276->277, ";"]
                block_item[286->327]
                  stat[286->327]
                    exp_stat[286->327]
                      exp_opt[286->326]
                        exp[286->326]
                          assignment_exp[286->326]
                            conditional_exp[286->326]
                              logical_or_exp[286->326]
                                logical_and_exp[286->326]
                                  inclusive_or_exp[286->326]
                                    exclusive_or_exp[286->326]
                                      and_exp[286->326]
                                        equality_exp[286->326]
                                          relational_exp[286->326]
                                            shift_expression[286->326]
                                              additive_exp[286->326]
                                                mult_exp[286->326]
                                                  cast_exp[286->326]
                                                    unary_exp[286->326]
                                                      postfix_exp[286->326]
                                                        postfix_exp[286->292]
                                                          primary_exp[286->292]
                                                            id[286->292, "printf"]
                                                        ([292->293, "("]
                                                        argument_exp_list[293->325]
                                                          argument_exp_list[293->310]
                                                            argument_exp_list[293->299]
                                                              assignment_exp[293->299]
                                                                conditional_exp[293->299]
                                                                  logical_or_exp[293->299]
                                                                    logical_and_exp[293->299]
                                                                      inclusive_or_exp[293->299]
                                                                        exclusive_or_exp[293->299]
                                                                          and_exp[293->299]
                                                                            equality_exp[293->299]
                                                                              relational_exp[293->299]
                                                                                shift_expression[293->299]
                                                                                  additive_exp[293->299]
                                                                                    mult_exp[293->299]
                                                                                      cast_exp[293->299]
                                                                                        unary_exp[293->299]
                                                                                          postfix_exp[293->299]
                                                                                            primary_exp[293->299]
                                                                                              adj_strings[293->299]
                                                                                                string_1[293->299]
                                                                                                  string[293->299, ""%d%d""]
                                                            comma[299->300, ","]
                                                            assignment_exp[300->310]
                                                              conditional_exp[300->310]
                                                                logical_or_exp[300->310]
                                                                  logical_and_exp[300->310]
                                                                    inclusive_or_exp[300->310]
                                                                      exclusive_or_exp[300->310]
                                                                        and_exp[300->310]
                                                                          equality_exp[300->310]
                                                                            relational_exp[300->310]
                                                                              shift_expression[300->310]
                                                                                additive_exp[300->310]
                                                                                  mult_exp[300->310]
                                                                                    cast_exp[300->310]
                                                                                      unary_exp[300->310]
                                                                                        postfix_exp[300->310]
                                                                                          postfix_exp[300->306]
                                                                                            primary_exp[300->306]
                                                                                              ([300->301, "("]
                                                                                              exp[301->305]
                                                                                                assignment_exp[301->305]
                                                                                                  conditional_exp[301->305]
                                                                                                    logical_or_exp[301->305]
                                                                                                      logical_and_exp[301->305]
                                                                                                        inclusive_or_exp[301->305]
                                                                                                          exclusive_or_exp[301->305]
                                                                                                            and_exp[301->305]
                                                                                                              equality_exp[301->305]
                                                                                                                relational_exp[301->305]
                                                                                                                  shift_expression[301->305]
                                                                                                                    additive_exp[301->305]
                                                                                                                      mult_exp[301->305]
                                                                                                                        cast_exp[301->305]
                                                                                                                          unary_exp[301->305]
                                                                                                                            unary_operator[301->302]
                                                                                                                              *[301->302, "*"]
                                                                                                                            cast_exp[302->305]
                                                                                                                              unary_exp[302->305]
                                                                                                                                postfix_exp[302->305]
                                                                                                                                  primary_exp[302->305]
                                                                                                                                    id[302->305, "ptr"]
                                                                                              )[305->306, ")"]
                                                                                          dot[306->307, "."]
                                                                                          id[307->310, "age"]
                                                          comma[310->311, ","]
                                                          assignment_exp[312->325]
                                                            conditional_exp[312->325]
                                                              logical_or_exp[312->325]
                                                                logical_and_exp[312->325]
                                                                  inclusive_or_exp[312->325]
                                                                    exclusive_or_exp[312->325]
                                                                      and_exp[312->325]
                                                                        equality_exp[312->325]
                                                                          relational_exp[312->325]
                                                                            shift_expression[312->325]
                                                                              additive_exp[312->325]
                                                                                mult_exp[312->325]
                                                                                  cast_exp[312->325]
                                                                                    unary_exp[312->325]
                                                                                      postfix_exp[312->325]
                                                                                        postfix_exp[312->318]
                                                                                          primary_exp[312->318]
                                                                                            ([312->313, "("]
                                                                                            exp[313->317]
                                                                                              assignment_exp[313->317]
                                                                                                conditional_exp[313->317]
                                                                                                  logical_or_exp[313->317]
                                                                                                    logical_and_exp[313->317]
                                                                                                      inclusive_or_exp[313->317]
                                                                                                        exclusive_or_exp[313->317]
                                                                                                          and_exp[313->317]
                                                                                                            equality_exp[313->317]
                                                                                                              relational_exp[313->317]
                                                                                                                shift_expression[313->317]
                                                                                                                  additive_exp[313->317]
                                                                                                                    mult_exp[313->317]
                                                                                                                      cast_exp[313->317]
                                                                                                                        unary_exp[313->317]
                                                                                                                          unary_operator[313->314]
                                                                                                                            *[313->314, "*"]
                                                                                                                          cast_exp[314->317]
                                                                                                                            unary_exp[314->317]
                                                                                                                              postfix_exp[314->317]
                                                                                                                                primary_exp[314->317]
                                                                                                                                  id[314->317, "ptr"]
                                                                                            )[317->318, ")"]
                                                                                        dot[318->319, "."]
                                                                                        id[319->325, "weight"]
                                                        )[325->326, ")"]
                      ;[326->327, ";"]
              block_item[345->354]
                stat[345->354]
                  jump_stat[345->354]
                    return[345->351, "return"]
                    exp[352->353]
                      assignment_exp[352->353]
                        conditional_exp[352->353]
                          logical_or_exp[352->353]
                            logical_and_exp[352->353]
                              inclusive_or_exp[352->353]
                                exclusive_or_exp[352->353]
                                  and_exp[352->353]
                                    equality_exp[352->353]
                                      relational_exp[352->353]
                                        shift_expression[352->353]
                                          additive_exp[352->353]
                                            mult_exp[352->353]
                                              cast_exp[352->353]
                                                unary_exp[352->353]
                                                  postfix_exp[352->353]
                                                    primary_exp[352->353]
                                                      cconst[352->353]
                                                        int_const[352->353, "0"]
                    ;[353->354, ";"]
        }[359->360, "}"]