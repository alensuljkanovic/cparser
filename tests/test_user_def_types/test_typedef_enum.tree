translation_unit[5->152]
  translation_unit[5->119]
    external_decl[5->119]
      decl[5->119]
        decl_body[5->118]
          decl_specs[5->118]
            storage_class_spec[5->12]
              typedef[5->12, "typedef"]
            decl_specs[13->118]
              type_spec[13->102]
                enum_spec[13->102]
                  enum[13->17, "enum"]
                  {[18->19, "{"]
                  enumerator_list[28->96]
                    enumerator_list[28->95]
                      enumerator_list[28->70]
                        enumerator_list[28->45]
                          enumerator[28->45]
                            id[28->41, "kBLSUnchanged"]
                            =[42->43, "="]
                            const_exp[44->45]
                              conditional_exp[44->45]
                                logical_or_exp[44->45]
                                  logical_and_exp[44->45]
                                    inclusive_or_exp[44->45]
                                      exclusive_or_exp[44->45]
                                        and_exp[44->45]
                                          equality_exp[44->45]
                                            relational_exp[44->45]
                                              shift_expression[44->45]
                                                additive_exp[44->45]
                                                  mult_exp[44->45]
                                                    cast_exp[44->45]
                                                      unary_exp[44->45]
                                                        postfix_exp[44->45]
                                                          primary_exp[44->45]
                                                            cconst[44->45]
                                                              int_const[44->45, "0"]
                        comma[45->46, ","]
                        enumerator[55->70]
                          id[55->66, "kBLSChanged"]
                          =[67->68, "="]
                          const_exp[69->70]
                            conditional_exp[69->70]
                              logical_or_exp[69->70]
                                logical_and_exp[69->70]
                                  inclusive_or_exp[69->70]
                                    exclusive_or_exp[69->70]
                                      and_exp[69->70]
                                        equality_exp[69->70]
                                          relational_exp[69->70]
                                            shift_expression[69->70]
                                              additive_exp[69->70]
                                                mult_exp[69->70]
                                                  cast_exp[69->70]
                                                    unary_exp[69->70]
                                                      postfix_exp[69->70]
                                                        primary_exp[69->70]
                                                          cconst[69->70]
                                                            int_const[69->70, "1"]
                      comma[70->71, ","]
                      enumerator[80->95]
                        id[80->91, "kBLSDeleted"]
                        =[92->93, "="]
                        const_exp[94->95]
                          conditional_exp[94->95]
                            logical_or_exp[94->95]
                              logical_and_exp[94->95]
                                inclusive_or_exp[94->95]
                                  exclusive_or_exp[94->95]
                                    and_exp[94->95]
                                      equality_exp[94->95]
                                        relational_exp[94->95]
                                          shift_expression[94->95]
                                            additive_exp[94->95]
                                              mult_exp[94->95]
                                                cast_exp[94->95]
                                                  unary_exp[94->95]
                                                    postfix_exp[94->95]
                                                      primary_exp[94->95]
                                                        cconst[94->95]
                                                          int_const[94->95, "2"]
                    comma[95->96, ","]
                  }[101->102, "}"]
              decl_specs[103->118]
                type_spec[103->118]
                  typedef_name[103->118]
                    id[103->118, "BufhlLineStatus"]
          init_declarator_list_opt[118->118]
        ;[118->119, ";"]
  external_decl[129->152]
    decl[129->152]
      decl_body[129->151]
        decl_specs[129->144]
          type_spec[129->144]
            typedef_name[129->144]
              id[129->144, "BufhlLineStatus"]
        init_declarator_list_opt[145->151]
          init_declarator_list[145->151]
            init_declarator_1_comma[145->151]
              init_declarator[145->151]
                declarator[145->151]
                  direct_declarator[145->151]
                    id[145->151, "status"]
      ;[151->152, ";"]